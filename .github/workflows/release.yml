name: Release (build, scan, push)

on:
  push:
    tags: ["v*.*.*"]
  workflow_dispatch:
  schedule:
    - cron: "17 01 * * 2"

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # 1) Vorab AMD64-Image bauen und laden -> f√ºr Trivy
      - name: Pre-build (load for scan)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-fail2ban
          push: false
          pull: true
          load: true
          platforms: linux/amd64
          tags: fail2ban-scan:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 2) Trivy-Image-Scan (gate)
      - name: Trivy Image (generate SARIF)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: fail2ban-scan:${{ github.sha }}
          format: sarif
          output: trivy-release.sarif
          exit-code: "0"
          hide-progress: true
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-release.sarif
          category: trivy-release
      - name: Trivy Image (enforce severity)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: fail2ban-scan:${{ github.sha }}
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: "1"
          hide-progress: true

      # 3) GHCR Login
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4) Docker meta (Tags & Labels)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/alaub81/fail2ban-dockerized
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=fail2ban-dockerized
            org.opencontainers.image.source=${{ github.repository }}

      # 5) Multi-Arch Build & Push (nur wenn Trivy ok)
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-fail2ban
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
