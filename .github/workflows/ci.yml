name: CI (lint, build, trivy)

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: actionlint
        uses: docker://rhysd/actionlint:latest
      - name: yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          format: github
          file_or_dir: "."
      - name: hadolint
        uses: hadolint/hadolint-action@v3.3.0
        with:
          dockerfile: Dockerfile-fail2ban
      - name: shellcheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          scandir: .
        env:
          SHELLCHECK_OPTS: -S style

  build-and-scan:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Build lokales AMD64-Image und in den lokalen Docker-Daemon "loaden"
      - name: Build (load for scanning)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-fail2ban
          push: false
          pull: true
          load: true
          platforms: linux/amd64
          tags: fail2ban-ci:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Trivy: FS-Scan (Repo) -> SARIF + Fail on HIGH/CRITICAL ---
      - name: Trivy FS (generate SARIF)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-fs.sarif
          exit-code: "0"
          hide-progress: true
      - name: Upload FS SARIF
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-fs.sarif
          category: trivy-fs
      - name: Trivy FS (enforce severity)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: fs
          scan-ref: .
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: "1"
          hide-progress: true

      # --- Trivy: Image-Scan (lokales Tag) -> SARIF + Fail on HIGH/CRITICAL ---
      - name: Trivy Image (generate SARIF)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: fail2ban-ci:${{ github.sha }}
          format: sarif
          output: trivy-image.sarif
          exit-code: "0"
          hide-progress: true
      - name: Upload Image SARIF
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-image.sarif
          category: trivy-image
      - name: Trivy Image (enforce severity)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: fail2ban-ci:${{ github.sha }}
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: "1"
          hide-progress: true

  e2e:
    name: E2E (ban via file backend)
    runs-on: ubuntu-latest
    needs: build-and-scan

    steps:
      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # ⬇️ Build the image locally for THIS job (fast dank GHA cache)
      - name: Build image for E2E (load)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-fail2ban
          push: false
          pull: true
          load: true
          platforms: linux/amd64
          tags: fail2ban-e2e:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prepare e2e jail and test log
        run: |
          mkdir -p e2e
          cat > e2e/99-e2e.local <<'EOF'
          [sshd-e2e]
          enabled  = true
          filter   = sshd
          backend  = auto
          logpath  = /var/log/test-auth.log
          maxretry = 1
          findtime = 1m
          bantime  = 5m
          port     = ssh
          banaction = iptables-multiport
          chain     = INPUT
          EOF
          : > e2e/test-auth.log

      - name: Start fail2ban container (host net + NET_ADMIN)
        run: |
          docker run -d --name f2b-e2e \
            --cap-add NET_ADMIN --cap-add NET_RAW \
            --network host \
            -v "$PWD/e2e/99-e2e.local:/etc/fail2ban/jail.d/99-e2e.local:ro" \
            -v "$PWD/e2e/test-auth.log:/var/log/test-auth.log" \
            fail2ban-e2e:${{ github.sha }}

      - name: Trigger a failed SSH auth in the test log
        run: |
          sleep 5
          dt="$(date '+%b %e %T')"
          ip="203.0.113.77"
          port="4242"
          printf '%s runner sshd[12345]: Failed password for invalid user e2e from %s port %s ssh2\n' \
            "$dt" "$ip" "$port" >> e2e/test-auth.log
          sleep 5

      - name: Assert ban is active
        run: |
          docker exec f2b-e2e fail2ban-client status sshd-e2e || true
          if ! docker exec f2b-e2e sh -lc 'iptables -n -L f2b-sshd-e2e 2>/dev/null | grep -q 203.0.113.77'; then
            echo "E2E failed: 203.0.113.77 not found in f2b-sshd-e2e chain"
            docker logs f2b-e2e || true
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: docker rm -f f2b-e2e || true
